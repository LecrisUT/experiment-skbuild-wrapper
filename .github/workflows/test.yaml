on:
  push:
    branches: [ "main" ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cmake_only:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: lukka/get-cmake@latest
      - run: |
          cmake -B build_base -S base -DCMAKE_BUILD_TYPE=Release
          cmake --build build_base --config=release
          cmake --install build_base --prefix install_base --config=release
      - run: |
          cmake -B build_main -S my_pkg -Dbase_ROOT=install_base  -DCMAKE_BUILD_TYPE=Release
          cmake --build build_main --config=release
          cmake --install build_main --prefix install_main --config=release
      - run: |
          export LD_LIBRARY_PATH=$(echo $(pwd)/install_base/lib*)
          ./install_main/bin/main
        if: ${{ matrix.runs-on == 'ubuntu-latest' }}
      - run: |
          export DYLD_LIBRARY_PATH=$(echo $(pwd)/install_base/lib*)
          ./install_main/bin/main
        if: ${{ matrix.runs-on == 'macos-latest' }}
      - run: |
          $env:PATH += ";$pwd\install_base\bin"
          .\install_main\bin\main
        if: ${{ matrix.runs-on == 'windows-latest' }}
  pip:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - uses: lukka/get-cmake@latest
      - run: |
          pip install ./my_pkg ./base -v
      - run: |
          readelf -d $pythonLocation/lib/python*/site-packages/my_pkg/bin/main
        if: ${{ matrix.runs-on == 'ubuntu-latest' }}
      - run: |
          otool -l $pythonLocation/lib/python*/site-packages/my_pkg/bin/main
        if: ${{ matrix.runs-on == 'macos-latest' }}
      - run: |
          main
