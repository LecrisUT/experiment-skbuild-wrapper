[build-system]
requires = ["scikit-build-core>=0.11", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "my_pkg"
version = "0.0.0"
dependencies = ["my_pkg_base"]

# scikit-build-core auto-generate these
[project.scripts]
main = "my_pkg._run_main:run"

[tool.scikit-build]
cmake.source-dir = "python"
wheel.install-dir = "my_pkg"
cmake.build-type = "Release"

[[tool.scikit-build.overrides]]
if.from-sdist = false
build-dir = "cmake-build-scikit"
build.requires = ["my_pkg_base @ {root:parent:uri}/base"]

[tool.cibuildwheel]
build = "cp312-*"
before-build = [
    "pip install wheelhouse/*.whl",
]

[tool.cibuildwheel.linux]
repair-wheel-command = [
    "export platlib=$(python3 -c 'import sysconfig; print(sysconfig.get_path(\"platlib\"))')",
    "export LD_LIBRARY_PATH=$(echo $platlib/my_pkg_base/lib*):$LD_LIBRARY_PATH",
    "auditwheel repair -w {dest_dir} {wheel}",
]

[tool.cibuildwheel.macos]
repair-wheel-command = [
    "export platlib=$(python3 -c 'import sysconfig; print(sysconfig.get_path(\"platlib\"))')",
    "export DYLD_LIBRARY_PATH=$(echo $platlib/my_pkg_base/lib*):$DYLD_LIBRARY_PATH",
    "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}",
]

[tool.cibuildwheel.windows]
before-build = [
    "pip install delvewheel",
    "pip install wheelhouse/*.whl",
]
repair-wheel-command = [
    "$platlib = (python3 -c 'import sysconfig; print(sysconfig.get_path(\"platlib\"))')",
    "$platlib",
    '$env:Path += ";$platlib\my_pkg_base\bin"',
    "$env:Path",
    "delvewheel repair -w {dest_dir} {wheel}",
]
